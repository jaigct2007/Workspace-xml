package com.example;

import java.io.StringWriter;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.w3c.dom.Document;
import org.w3c.dom.Element;

public class DomParser {

	public static void main(String[] args) throws ParserConfigurationException {
		// TODO Auto-generated method stub
DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
DocumentBuilder builder=factory.newDocumentBuilder();
Document personInfo=builder.newDocument();
Element e=personInfo.createElement("PersonInfoBillTo");
e.setAttribute("AddressLine1", "");
e.setAttribute("AddressLine2", "");
e.setAttribute("FirstName", "");
e.setAttribute("LastNAme", "");
e.setAttribute("State", "");
e.setAttribute("City", "");
e.setAttribute("Country", "");
e.setAttribute("Zip", "");
personInfo.appendChild(e);

printDocument(personInfo);

	}

	private  static void printDocument(Document personInfo) {
		// TODO Auto-generated method stub
		Document doc=personInfo;
		TransformerFactory tf = TransformerFactory.newInstance();
		Transformer transformer = tf.newTransformer();
		transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, "yes");
		StringWriter writer = new StringWriter();
		transformer.transform(new DOMSource(doc), new StreamResult(writer));
		String output = writer.getBuffer().toString().replaceAll("\n|\r", "");
		System.out.println(output);
	}

}
